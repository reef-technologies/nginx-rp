user nginx;
worker_processes auto;

pid /var/run/nginx.pid;

error_log /dev/stderr info;

events {
    worker_connections  1024;
}

stream {
    map $ssl_preread_server_name $targetUpstream {
        ~^(?<upstream>.+).localhost.local $upstream;  # change it to your domain
    }

    upstream test {
        server test_nginx_1:443;
    }

    upstream test2 {
        server test2_nginx_1:443;
    }

    server {
        listen 443;

        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        proxy_connect_timeout 1s;
        proxy_timeout 3s;
        proxy_pass $targetUpstream;

        ssl_preread on;
    }
}

http {
    include /etc/nginx/mime.types;

    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout;

    sendfile        on;
    keepalive_timeout  65;

    map $http_host $targetUpstream {
        ~^(?<upstream>.+).localhost.local $upstream;  # change it to your domain
        default test;  # for docker-compose healthcheck, change it to your default upstream server
    }

    upstream test {
        server test_nginx_1:80;
    }

    upstream test2 {
        server test2_nginx_1:80;
    }

    server {
        listen 80;

        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        location / {
            proxy_redirect off;
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_http_version 1.1;
            proxy_intercept_errors on;
            proxy_pass http://$targetUpstream;
        }
    }
}
